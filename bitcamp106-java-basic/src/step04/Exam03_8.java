// 논리 연산자  : 조건문과 비트 연산
package step04;

public class Exam03_8 {
public static void main(String[] args) {
    
    int i = 0b01101001; //105
    System.out.println(i >> 1); // 00110100|1 => 52
    System.out.println(i >> 2); // 00011010|0 => 26
    System.out.println(i >> 3); // 00001101|0 => 13
    System.out.println(i >> 4); // 00000110|1 => 6
    // 오른으로 이동 후,
    // 왼쪽 빈 자리 : 원래 숫자와 같은 부로 값으로 채운다.
    // 양수면 0 음수면 1을 채운다.
    // 오른쪽의 넘친 비트 : 짜른다.

    //음수이동
    i = 0b11111111_11111111_11111111_10101001; // -87
    System.out.println(i << 1); // 1_11111111_11111111_11111111_1010100|1 // -44
                                // 왼쪽 빈자리는 숫자의 부호비트로 채운다 음수니까 1로 채운다.
                                // => 2로 나눈후에 소수점이 있으면 그수보다 더작은값이
    System.out.println(i << 2); // 11_11111111_11111111_11111111_101010|01 // -22
    System.out.println(i << 3); // 111_11111111_11111111_11111111_10101|001 // -11
    System.out.println(i << 4); // 1111_11111111_11111111_11111111_1010|1001 // 05
    
 
  
}
}

//오른쪽 이동
// - 비트 이동은 곱하기 2 한것과 같은 효과를 준다.