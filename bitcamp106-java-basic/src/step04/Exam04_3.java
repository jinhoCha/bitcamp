// 논리 연산자  : 조건문과 비트 연산
package step04;

public class Exam04_3 {
public static void main(String[] args) {
    
    int i = 0b01101001; //105
    System.out.println(i >> 1); // 00110100|1 => 52
    System.out.println(i >> 2); // 00011010|0 => 26
    System.out.println(i >> 3); // 00001101|0 => 13
    System.out.println(i >> 4); // 00000110|1 => 6
    // => >>> 연사자를 사용하여 오른쪽으로 이동한다면 무조건 0으로채운다
    // 그래서 양수일때는 >> 연산자와 같은 결과가 나오지만 
    // 다음과같이 음수 일때는 양수로 바뀌는 결과가 나온다.

    //음수이동
    i = 0b11111111_11111111_11111111_10101001; // -87
    System.out.println(i >>> 1); // 0_11111111_11111111_11111111_1010100|1 // -
                                
    System.out.println(i >>> 2); // 0_11111111_11111111_11111111_10101001 // 
    System.out.println(i >>> 3); // 00_11111111_11111111_11111111_10101001 // 
    System.out.println(i >>> 4); // 000_11111111_11111111_11111111_10101001 // 
    
 
  
}
}

//오른쪽 이동
// - 비트 이동은 곱하기 2 한것과 같은 효과를 준다.