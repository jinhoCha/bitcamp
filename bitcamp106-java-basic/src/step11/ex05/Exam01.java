package step11.ex05;

public class Exam01 {
    public static void main(String[] args) {

        // B클래스의 설계도에 따라 hEAP 영역에 변수를 준비한다.
        // = > B클래스는 A클래스도 사용한다고 선언했기 떄문에
        //     A클래스의 설계도에 따라 A 클래스에 선언된 인스턴스 변수도 함께 생성된다.
        B obj = new B();
        obj.v2 = 200;
        obj.v1 = 100; // 상속받아서 가능.
        System.out.printf("v2=%d, v1=%d\n", obj.v2, obj.v1);

        //인스턴스 생성 정차
        // 1) B클래스가 사용한다고 선언한 클래스를 먼저 메모리에 로딩한다
        // 즉  A클래스를 메모리에 로딩한다        A클래스에있는 print문에 A클래스의 static{}실행 문구가 뜬다.
        // 2) B클래스에 메모리에 로딩한다       B클래스에있는 print문에 A클래스의 static{}실행 문구가 뜬다.
        // 3) A클래스에 선언한 대로 인스턴스 변수를 Heap에만든다
        // 4) B클래스에 선언된 대로 인스턴수 변수를 Heap에 만든다.

        // 그래서 인스턴스를 생성할 떄는 항상 상속 받아야 하는 클래스 파일이 모두 있어야 한다.
    }
}

// 용어 정리!!
// 상속(inheritance)
// = > 기존에 만든 클래스의 자신의 코드처럼 사용하는 기법
// =>보통 기존 코드를 손대지 않고 새 코드를 덧붙일 때 많이 사용한다.
// 
// 부모클래스 = 수퍼클래스
// A클래스처럼 상속해주는 클래스를 말한다.

//자식클래스 = 서브클래스
//=> B클래스처럼 다른 클래스를 상속받는 클래스를 말한다.