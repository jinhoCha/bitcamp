package step11.ex06;

public class Exam01 {
    public static void main(String[] args) {

        // B클래스의 설계도에 따라 hEAP 영역에 변수를 준비한다.
        // = > B클래스는 A클래스도 사용한다고 선언했기 떄문에
        //     A클래스의 설계도에 따라 A 클래스에 선언된 인스턴스 변수도 함께 생성된다.
        C obj = new C();
        obj.v1 = 200;
        obj.v2 = 100; // 상속받아서 가능.
        obj.v3 = 300;
        System.out.printf("v1=%d, v2=%d, v3=%d\n", obj.v1, obj.v2,obj.v3);

        //생성자 호출 순서
        // 1) C클래스의 생성사 호출하면 
        // 그 생성자의 첫 번째 문장이 부모 클래스의 생성자를 호출하는 명령이다.
        // 그래서 부모 클래스인 B 클래스의 생성자를 호출한다.
        // 2) B클래스의 생성자를 호출하면,
        // 그 생성자의 첫 번째 문장이 부모 클래스의 생성자를 호출하는 명령이다.
        // 그래서 부모 클래스인 A 클래스의 생성자를 호출한다.

        // 3) A클래스의 생성자 호출
        // 그 생성자의 첫 번째 문장이 부모 클래스의 생성자를 호출하는 명령이다.
        // 그래서 부모 클래스인 Object 클래스의 생성자를 호출한다.
        // 4) object 클랫스의 생성자를 호출하면,
        // 더이상 수퍼 클래스가 없기 때문에 object()생성자를 실행한다
        //        그리고 이생성자를 호출한 A클래스의 생성자로 리턴한다
        //        5) A클래스의 생성자를 실행한 후
        //        이 생성자를 호출한 B클래스의 생성자로 리턴한다
        //        6) B클래스의 생성자를 실행한 후
        //        이 생성자를 호출한 C클래스의 생성자로 리턴한다.
        //        7) C 클래스의 생성자를 실행한다.
    }
}

